{"ast":null,"code":"var _jsxFileName = \"/home/charis/Desktop/mern-blog/client/src/pages/Signup/SignupForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Input, Button, Tag, message } from \"antd\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport { authAPI } from \"./../../api/api\";\nimport isEmpty from \"lodash.isempty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignupForm() {\n  _s();\n\n  const router = useHistory();\n  const [initialValues, setInitialValues] = useState({});\n  const [submissionErrors, setSubmissionErrors] = useState({});\n\n  const onSubmit = async event => {\n    try {\n      await authAPI.signup({\n        user: event\n      });\n      message.success(\"User created successfully\");\n      router.push(\"/login\");\n    } catch (error) {\n      var _error$response;\n\n      console.log(\"Error registering a new user...\", (_error$response = error.response) !== null && _error$response !== void 0 ? _error$response : error);\n\n      if (error.response && error.response.data) {\n        setSubmissionErrors(error.response.data);\n      } else setSubmissionErrors({\n        err: \"Signup error\"\n      });\n    }\n  };\n\n  const checkValidation = values => {\n    var _values$userName, _values$password, _values$confirmPasswo, _values$email;\n\n    const errors = {};\n\n    if (!((_values$userName = values.userName) === null || _values$userName === void 0 ? void 0 : _values$userName.trim())) {\n      errors.userName = \"Please enter the userName\";\n    }\n\n    if (!((_values$password = values.password) === null || _values$password === void 0 ? void 0 : _values$password.trim())) {\n      errors.password = \"Please enter the password\";\n    }\n\n    if (!((_values$confirmPasswo = values.confirmPassword) === null || _values$confirmPasswo === void 0 ? void 0 : _values$confirmPasswo.trim())) {\n      errors.confirmPassword = \"Please enter the password confirmation\";\n    } else if (values.confirmPassword !== values.password) {\n      errors.confirmPassword = \"Passwords do not match\";\n    }\n\n    if (!((_values$email = values.email) === null || _values$email === void 0 ? void 0 : _values$email.trim())) {\n      errors.email = \"Please enter the email\";\n    }\n\n    return errors;\n  };\n\n  return /*#__PURE__*/_jsxDEV(FinalForm, {\n    initialValues: initialValues,\n    validate: checkValidation,\n    onSubmit: onSubmit,\n    render: ({\n      handleSubmit,\n      submitting\n    }) => /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"UserName\",\n        labelCol: {\n          span: 24\n        },\n        wrapperCol: {\n          span: 24\n        },\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          name: \"userName\",\n          children: ({\n            input,\n            meta\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Input, { ...input,\n              name: \"userName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this), meta.touched && meta.error && /*#__PURE__*/_jsxDEV(Tag, {\n              color: \"error\",\n              children: meta.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Password\",\n        labelCol: {\n          span: 24\n        },\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          name: \"password\",\n          children: ({\n            input,\n            meta\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Input.Password, { ...input,\n              name: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this), meta.touched && meta.error && /*#__PURE__*/_jsxDEV(Tag, {\n              color: \"error\",\n              children: meta.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Confirm Password\",\n        labelCol: {\n          span: 24\n        },\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          name: \"confirmPassword\",\n          children: ({\n            input,\n            meta\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Input.Password, { ...input,\n              name: \"confirmPassword\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this), meta.touched && meta.error && /*#__PURE__*/_jsxDEV(Tag, {\n              color: \"error\",\n              children: meta.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Email\",\n        labelCol: {\n          span: 24\n        },\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          children: ({\n            input,\n            meta\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Input, { ...input,\n              name: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this), meta.touched && meta.error && /*#__PURE__*/_jsxDEV(Tag, {\n              color: \"error\",\n              children: meta.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Summary\",\n        labelCol: {\n          span: 24\n        },\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          name: \"summary\",\n          children: ({\n            input,\n            meta\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Input, { ...input,\n              name: \"summary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this), meta.touched && meta.error && /*#__PURE__*/_jsxDEV(Tag, {\n              color: \"error\",\n              children: meta.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Image URL\",\n        labelCol: {\n          span: 24\n        },\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          name: \"imagePath\",\n          children: ({\n            input,\n            meta\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Input, { ...input,\n              name: \"imagePath\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this), meta.touched && meta.error && /*#__PURE__*/_jsxDEV(Tag, {\n              color: \"error\",\n              children: meta.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), !isEmpty(submissionErrors) && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Object.entries(submissionErrors).map(([key, value]) => /*#__PURE__*/_jsxDEV(Tag, {\n          color: \"error\",\n          className: \"full-width\",\n          children: value\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-wrapper-vertical\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          disabled: submitting,\n          htmlType: \"submit\",\n          type: \"primary\",\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          htmlType: \"button\",\n          type: \"link\",\n          onClick: () => router.push(\"login\"),\n          children: \"Already have an account? Login!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignupForm, \"f3gfp7joD7CBlZwNrUnDtw4Q55I=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignupForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"sources":["/home/charis/Desktop/mern-blog/client/src/pages/Signup/SignupForm.js"],"names":["React","useState","useHistory","Form","Input","Button","Tag","message","FinalForm","Field","authAPI","isEmpty","SignupForm","router","initialValues","setInitialValues","submissionErrors","setSubmissionErrors","onSubmit","event","signup","user","success","push","error","console","log","response","data","err","checkValidation","values","errors","userName","trim","password","confirmPassword","email","handleSubmit","submitting","span","input","meta","touched","Object","entries","map","key","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Input, Button, Tag, message } from \"antd\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport { authAPI } from \"./../../api/api\";\nimport isEmpty from \"lodash.isempty\";\n\nexport default function SignupForm() {\n  const router = useHistory();\n  const [initialValues, setInitialValues] = useState({});\n  const [submissionErrors, setSubmissionErrors] = useState({});\n\n  const onSubmit = async (event) => {\n    try {\n      await authAPI.signup({ user: event });\n      message.success(\"User created successfully\");\n      router.push(\"/login\");\n    } catch (error) {\n      console.log(\"Error registering a new user...\", error.response ?? error);\n      if (error.response && error.response.data) {\n        setSubmissionErrors(error.response.data);\n      } else setSubmissionErrors({ err: \"Signup error\" });\n    }\n  };\n\n  const checkValidation = (values) => {\n    const errors = {};\n    if (!values.userName?.trim()) {\n      errors.userName = \"Please enter the userName\";\n    }\n    if (!values.password?.trim()) {\n      errors.password = \"Please enter the password\";\n    }\n    if (!values.confirmPassword?.trim()) {\n      errors.confirmPassword = \"Please enter the password confirmation\";\n    } else if (values.confirmPassword !== values.password) {\n      errors.confirmPassword = \"Passwords do not match\";\n    }\n    if (!values.email?.trim()) {\n      errors.email = \"Please enter the email\";\n    }\n    return errors;\n  };\n\n  return (\n    <FinalForm\n      initialValues={initialValues}\n      validate={checkValidation}\n      onSubmit={onSubmit}\n      render={({ handleSubmit, submitting }) => (\n        <form className=\"form\" onSubmit={handleSubmit}>\n          <Form.Item\n            label=\"UserName\"\n            labelCol={{ span: 24 }}\n            wrapperCol={{ span: 24 }}\n          >\n            <Field name=\"userName\">\n              {({ input, meta }) => (\n                <div>\n                  <Input {...input} name=\"userName\" />\n                  {meta.touched && meta.error && (\n                    <Tag color=\"error\">{meta.error}</Tag>\n                  )}\n                </div>\n              )}\n            </Field>\n          </Form.Item>\n          <Form.Item label=\"Password\" labelCol={{ span: 24 }}>\n            <Field name=\"password\">\n              {({ input, meta }) => (\n                <div>\n                  <Input.Password {...input} name=\"password\" />\n                  {meta.touched && meta.error && (\n                    <Tag color=\"error\">{meta.error}</Tag>\n                  )}\n                </div>\n              )}\n            </Field>\n          </Form.Item>\n          <Form.Item label=\"Confirm Password\" labelCol={{ span: 24 }}>\n            <Field name=\"confirmPassword\">\n              {({ input, meta }) => (\n                <div>\n                  <Input.Password {...input} name=\"confirmPassword\" />\n                  {meta.touched && meta.error && (\n                    <Tag color=\"error\">{meta.error}</Tag>\n                  )}\n                </div>\n              )}\n            </Field>\n          </Form.Item>\n          <Form.Item label=\"Email\" labelCol={{ span: 24 }}>\n            <Field name=\"email\">\n              {({ input, meta }) => (\n                <div>\n                  <Input {...input} name=\"email\" />\n                  {meta.touched && meta.error && (\n                    <Tag color=\"error\">{meta.error}</Tag>\n                  )}\n                </div>\n              )}\n            </Field>\n          </Form.Item>\n          <Form.Item label=\"Summary\" labelCol={{ span: 24 }}>\n            <Field name=\"summary\">\n              {({ input, meta }) => (\n                <div>\n                  <Input {...input} name=\"summary\" />\n                  {meta.touched && meta.error && (\n                    <Tag color=\"error\">{meta.error}</Tag>\n                  )}\n                </div>\n              )}\n            </Field>\n          </Form.Item>\n          <Form.Item label=\"Image URL\" labelCol={{ span: 24 }}>\n            <Field name=\"imagePath\">\n              {({ input, meta }) => (\n                <div>\n                  <Input {...input} name=\"imagePath\" />\n                  {meta.touched && meta.error && (\n                    <Tag color=\"error\">{meta.error}</Tag>\n                  )}\n                </div>\n              )}\n            </Field>\n          </Form.Item>\n\n          {!isEmpty(submissionErrors) && (\n            <div>\n              {Object.entries(submissionErrors).map(([key, value]) => (\n                <Tag color=\"error\" className=\"full-width\" key={key}>\n                  {value}\n                </Tag>\n              ))}\n            </div>\n          )}\n\n          <div className=\"buttons-wrapper-vertical\">\n            <Button disabled={submitting} htmlType=\"submit\" type=\"primary\">\n              Signup\n            </Button>\n            <Button\n              htmlType=\"button\"\n              type=\"link\"\n              onClick={() => router.push(\"login\")}\n            >\n              Already have an account? Login!\n            </Button>\n          </div>\n        </form>\n      )}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}