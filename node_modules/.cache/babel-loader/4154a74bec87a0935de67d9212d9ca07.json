{"ast":null,"code":"var _jsxFileName = \"/home/grace/Desktop/waaw-blogg/client/src/components/PostsGrid/PostsGrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Row, Col, Card, Modal, message } from \"antd\";\nimport defaultPostImage from \"./../../assets/images/default-post-image.jpg\";\nimport { EditTwoTone, DeleteTwoTone } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router\";\nimport \"./PostsGrid.scss\";\nimport { postsAPI } from \"./../../api/api\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Meta\n} = Card;\nexport default function PostsGrid({\n  data,\n  reloadPosts\n}) {\n  _s();\n\n  const router = useHistory();\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [deletePostID, setDeletePostID] = useState(null);\n  const [reload, setReload] = useState(false);\n  const userState = useSelector(st => st.user);\n\n  const confirmDelete = async () => {\n    try {\n      await postsAPI.delete(deletePostID);\n      setReload(!reload);\n      reloadPosts(!reload);\n      setDeleteModal(false);\n      message.success(\"Post deleted successfully\");\n    } catch (error) {\n      var _error$response;\n\n      console.log(\"Error deleting post...\", (_error$response = error.response) !== null && _error$response !== void 0 ? _error$response : error);\n      message.error(\"Error deleting post\");\n\n      if (error.response && error.response.data) {\n        message.error(error.response.data);\n      } else message.error(\"Error deleting post\");\n\n      setDeleteModal(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"posts-container\",\n      type: \"flex\",\n      children: data.map(item => /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        sm: 12,\n        md: 8,\n        lg: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          hoverable: true,\n          cover: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-container\",\n            onClick: () => router.push(\"/posts/view\", {\n              postID: item._id\n            }),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              alt: item.title,\n              src: item.imagePath ? item.imagePath : defaultPostImage,\n              className: \"card-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this),\n          actions: item.createdBy === userState.user.id ? [/*#__PURE__*/_jsxDEV(EditTwoTone, {\n            onClick: () => router.push(\"/posts/edit\", {\n              postID: item._id\n            })\n          }, \"edit\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(DeleteTwoTone, {\n            twoToneColor: \"red\",\n            onClick: () => {\n              setDeletePostID(item._id);\n              setDeleteModal(true);\n            }\n          }, \"delete\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 23\n          }, this)] : [],\n          children: /*#__PURE__*/_jsxDEV(Meta, {\n            title: item.title,\n            description: item.content.substring(0, 100) + \"...\",\n            onClick: () => router.push(\"/posts/view\", {\n              postID: item._id\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, item._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Delete Confirmation\",\n      visible: deleteModal,\n      onOk: () => confirmDelete(),\n      onCancel: () => setDeleteModal(false),\n      centered: true,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Are you sure you want to delete post?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostsGrid, \"U6223n3lsw1VkLin50OnMM5RGRU=\", false, function () {\n  return [useHistory, useSelector];\n});\n\n_c = PostsGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostsGrid\");","map":{"version":3,"sources":["/home/grace/Desktop/waaw-blogg/client/src/components/PostsGrid/PostsGrid.js"],"names":["React","useState","Row","Col","Card","Modal","message","defaultPostImage","EditTwoTone","DeleteTwoTone","useHistory","postsAPI","useSelector","Meta","PostsGrid","data","reloadPosts","router","deleteModal","setDeleteModal","deletePostID","setDeletePostID","reload","setReload","userState","st","user","confirmDelete","delete","success","error","console","log","response","map","item","push","postID","_id","title","imagePath","createdBy","id","content","substring"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Row, Col, Card, Modal, message } from \"antd\";\nimport defaultPostImage from \"./../../assets/images/default-post-image.jpg\";\nimport { EditTwoTone, DeleteTwoTone } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router\";\nimport \"./PostsGrid.scss\";\nimport { postsAPI } from \"./../../api/api\";\nimport { useSelector } from \"react-redux\";\n\nconst { Meta } = Card;\n\nexport default function PostsGrid({ data, reloadPosts }) {\n  const router = useHistory();\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [deletePostID, setDeletePostID] = useState(null);\n  const [reload, setReload] = useState(false);\n  const userState = useSelector((st) => st.user);\n\n  const confirmDelete = async () => {\n    try {\n      await postsAPI.delete(deletePostID);\n      setReload(!reload);\n      reloadPosts(!reload);\n      setDeleteModal(false);\n      message.success(\"Post deleted successfully\");\n    } catch (error) {\n      console.log(\"Error deleting post...\", error.response ?? error);\n      message.error(\"Error deleting post\");\n      if (error.response && error.response.data) {\n        message.error(error.response.data);\n      } else message.error(\"Error deleting post\");\n      setDeleteModal(false);\n    }\n  };\n\n  return (\n    <div>\n      <Row className=\"posts-container\" type=\"flex\">\n        {data.map((item) => (\n          <Col xs={24} sm={12} md={8} lg={8} key={item._id}>\n            <Card\n              hoverable\n              cover={\n                <div\n                  className=\"image-container\"\n                  onClick={() =>\n                    router.push(\"/posts/view\", { postID: item._id })\n                  }\n                >\n                  <img\n                    alt={item.title}\n                    src={item.imagePath ? item.imagePath : defaultPostImage}\n                    className=\"card-image\"\n                  />\n                </div>\n              }\n              actions={\n                item.createdBy === userState.user.id\n                  ? [\n                      <EditTwoTone\n                        key=\"edit\"\n                        onClick={() =>\n                          router.push(\"/posts/edit\", { postID: item._id })\n                        }\n                      />,\n                      <DeleteTwoTone\n                        key=\"delete\"\n                        twoToneColor=\"red\"\n                        onClick={() => {\n                          setDeletePostID(item._id);\n                          setDeleteModal(true);\n                        }}\n                      />,\n                    ]\n                  : []\n              }\n            >\n              <Meta\n                title={item.title}\n                description={item.content.substring(0, 100) + \"...\"}\n                onClick={() => router.push(\"/posts/view\", { postID: item._id })}\n              />\n            </Card>\n          </Col>\n        ))}\n      </Row>\n\n      <Modal\n        title=\"Delete Confirmation\"\n        visible={deleteModal}\n        onOk={() => confirmDelete()}\n        onCancel={() => setDeleteModal(false)}\n        centered\n      >\n        <p>Are you sure you want to delete post?</p>\n      </Modal>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}