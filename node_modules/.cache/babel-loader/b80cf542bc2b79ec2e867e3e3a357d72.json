{"ast":null,"code":"var _jsxFileName = \"/home/charis/Desktop/waaw-blog/client/src/pages/Posts/EditPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { Form, Input, Button, Tag, message } from \"antd\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport isEmpty from \"lodash.isempty\";\nimport { useSelector } from \"react-redux\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { postsAPI } from \"./../../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditPost() {\n  _s();\n\n  const router = useHistory();\n  const [initialValues, setInitialValues] = useState({});\n  const [submissionErrors, setSubmissionErrors] = useState({});\n  const userState = useSelector(st => st.user);\n  const location = useLocation();\n  const [postID, setPostID] = useState(null);\n  useEffect(() => {\n    let id = null;\n\n    (async () => {\n      if (location.state && location.state.hasOwnProperty(\"postID\")) {\n        id = location.state.postID;\n        setPostID(id);\n\n        try {\n          const {\n            data: res\n          } = await postsAPI.getOne(id);\n          console.log(res);\n          setInitialValues(res);\n        } catch (error) {\n          console.log(\"Error retrieving one post...\", error);\n        }\n      } else {\n        message.error(\"Post ID was not provided\");\n        router.goBack();\n      }\n    })();\n  }, [location.state]);\n\n  const onSubmit = async event => {\n    try {\n      await postsAPI.update({\n        post: event\n      });\n      message.success(\"Post updated successfully\");\n      router.goBack();\n    } catch (error) {\n      var _error$response;\n\n      console.log(\"Error updating post...\", (_error$response = error.response) !== null && _error$response !== void 0 ? _error$response : error);\n\n      if (error.response && error.response.data) {\n        setSubmissionErrors(error.response.data);\n      } else setSubmissionErrors({\n        err: \"Update error\"\n      });\n    }\n  };\n\n  const checkValidation = values => {\n    var _values$title, _values$content;\n\n    const errors = {};\n\n    if (!((_values$title = values.title) === null || _values$title === void 0 ? void 0 : _values$title.trim())) {\n      errors.title = \"Please enter the post's title\";\n    }\n\n    if (!((_values$content = values.content) === null || _values$content === void 0 ? void 0 : _values$content.trim())) {\n      errors.content = \"Please enter the post's content\";\n    }\n\n    return errors;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Edit post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FinalForm, {\n      initialValues: initialValues,\n      validate: checkValidation,\n      onSubmit: onSubmit,\n      render: ({\n        handleSubmit,\n        submitting\n      }) => /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Title\",\n          labelCol: {\n            span: 24\n          },\n          wrapperCol: {\n            span: 24\n          },\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            name: \"title\",\n            children: ({\n              input,\n              meta\n            }) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Input, { ...input,\n                name: \"title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this), meta.touched && meta.error && /*#__PURE__*/_jsxDEV(Tag, {\n                color: \"error\",\n                children: meta.error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Content\",\n          labelCol: {\n            span: 24\n          },\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            name: \"content\",\n            children: ({\n              input,\n              meta\n            }) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(TextArea, {\n                rows: 4,\n                ...input,\n                name: \"content\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 21\n              }, this), meta.touched && meta.error && /*#__PURE__*/_jsxDEV(Tag, {\n                color: \"error\",\n                children: meta.error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Image URL\",\n          labelCol: {\n            span: 24\n          },\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            name: \"imagePath\",\n            children: ({\n              input,\n              meta\n            }) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Input, { ...input,\n                name: \"imagePath\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }, this), meta.touched && meta.error && /*#__PURE__*/_jsxDEV(Tag, {\n                color: \"error\",\n                children: meta.error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), !isEmpty(submissionErrors) && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: Object.entries(submissionErrors).map(([key, value]) => /*#__PURE__*/_jsxDEV(Tag, {\n            color: \"error\",\n            className: \"full-width\",\n            children: value\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-wrapper-horizontal\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            disabled: submitting,\n            htmlType: \"submit\",\n            type: \"primary\",\n            children: \"Update Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            htmlType: \"button\",\n            onClick: () => router.goBack(),\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditPost, \"rM6GRwxLCa4s5V8Kgkni/5EBTxI=\", false, function () {\n  return [useHistory, useSelector, useLocation];\n});\n\n_c = EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"sources":["/home/charis/Desktop/waaw-blog/client/src/pages/Posts/EditPost.js"],"names":["React","useState","useEffect","useHistory","useLocation","Form","Input","Button","Tag","message","FinalForm","Field","isEmpty","useSelector","TextArea","postsAPI","EditPost","router","initialValues","setInitialValues","submissionErrors","setSubmissionErrors","userState","st","user","location","postID","setPostID","id","state","hasOwnProperty","data","res","getOne","console","log","error","goBack","onSubmit","event","update","post","success","response","err","checkValidation","values","errors","title","trim","content","handleSubmit","submitting","span","input","meta","touched","Object","entries","map","key","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { Form, Input, Button, Tag, message } from \"antd\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport isEmpty from \"lodash.isempty\";\nimport { useSelector } from \"react-redux\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { postsAPI } from \"./../../api/api\";\n\nexport default function EditPost() {\n  const router = useHistory();\n  const [initialValues, setInitialValues] = useState({});\n  const [submissionErrors, setSubmissionErrors] = useState({});\n  const userState = useSelector((st) => st.user);\n  const location = useLocation();\n  const [postID, setPostID] = useState(null);\n\n  useEffect(() => {\n    let id = null;\n    (async () => {\n      if (location.state && location.state.hasOwnProperty(\"postID\")) {\n        id = location.state.postID;\n        setPostID(id);\n        try {\n          const { data: res } = await postsAPI.getOne(id);\n          console.log(res);\n          setInitialValues(res);\n        } catch (error) {\n          console.log(\"Error retrieving one post...\", error);\n        }\n      } else {\n        message.error(\"Post ID was not provided\");\n        router.goBack();\n      }\n    })();\n  }, [location.state]);\n\n  const onSubmit = async (event) => {\n    try {\n      await postsAPI.update({\n        post: event,\n      });\n      message.success(\"Post updated successfully\");\n      router.goBack();\n    } catch (error) {\n      console.log(\"Error updating post...\", error.response ?? error);\n      if (error.response && error.response.data) {\n        setSubmissionErrors(error.response.data);\n      } else setSubmissionErrors({ err: \"Update error\" });\n    }\n  };\n\n  const checkValidation = (values) => {\n    const errors = {};\n    if (!values.title?.trim()) {\n      errors.title = \"Please enter the post's title\";\n    }\n    if (!values.content?.trim()) {\n      errors.content = \"Please enter the post's content\";\n    }\n    return errors;\n  };\n\n  return (\n    <div className=\"form-container\">\n      <h3>Edit post</h3>\n      <FinalForm\n        initialValues={initialValues}\n        validate={checkValidation}\n        onSubmit={onSubmit}\n        render={({ handleSubmit, submitting }) => (\n          <form className=\"form\" onSubmit={handleSubmit}>\n            <Form.Item\n              label=\"Title\"\n              labelCol={{ span: 24 }}\n              wrapperCol={{ span: 24 }}\n            >\n              <Field name=\"title\">\n                {({ input, meta }) => (\n                  <div>\n                    <Input {...input} name=\"title\" />\n                    {meta.touched && meta.error && (\n                      <Tag color=\"error\">{meta.error}</Tag>\n                    )}\n                  </div>\n                )}\n              </Field>\n            </Form.Item>\n\n            <Form.Item label=\"Content\" labelCol={{ span: 24 }}>\n              <Field name=\"content\">\n                {({ input, meta }) => (\n                  <div>\n                    <TextArea rows={4} {...input} name=\"content\" />\n                    {meta.touched && meta.error && (\n                      <Tag color=\"error\">{meta.error}</Tag>\n                    )}\n                  </div>\n                )}\n              </Field>\n            </Form.Item>\n\n            <Form.Item label=\"Image URL\" labelCol={{ span: 24 }}>\n              <Field name=\"imagePath\">\n                {({ input, meta }) => (\n                  <div>\n                    <Input {...input} name=\"imagePath\" />\n                    {meta.touched && meta.error && (\n                      <Tag color=\"error\">{meta.error}</Tag>\n                    )}\n                  </div>\n                )}\n              </Field>\n            </Form.Item>\n\n            {!isEmpty(submissionErrors) && (\n              <div>\n                {Object.entries(submissionErrors).map(([key, value]) => (\n                  <Tag color=\"error\" className=\"full-width\" key={key}>\n                    {value}\n                  </Tag>\n                ))}\n              </div>\n            )}\n\n            <div className=\"buttons-wrapper-horizontal\">\n              <Button disabled={submitting} htmlType=\"submit\" type=\"primary\">\n                Update Post\n              </Button>\n              <Button htmlType=\"button\" onClick={() => router.goBack()}>\n                Back\n              </Button>\n            </div>\n          </form>\n        )}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}