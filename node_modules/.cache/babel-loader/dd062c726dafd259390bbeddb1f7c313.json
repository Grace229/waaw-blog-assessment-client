{"ast":null,"code":"var _jsxFileName = \"/home/charis/Desktop/mern-blog/client/src/pages/Login/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Input, Button, Tag, message } from \"antd\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport isEmpty from \"lodash.isempty\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userAuthActions } from \"./../../redux/actions/actionCreator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginForm() {\n  _s();\n\n  const router = useHistory();\n  const [initialValues, setInitialValues] = useState({});\n  const [submissionErrors, setSubmissionErrors] = useState({});\n  const dispatch = useDispatch();\n  const userState = useSelector(st => st.user);\n\n  const onSubmit = async event => {\n    try {\n      dispatch(userAuthActions.login({\n        user: event\n      }));\n    } catch (error) {\n      var _error$response;\n\n      console.log(\"Error logging in user...\", (_error$response = error.response) !== null && _error$response !== void 0 ? _error$response : error);\n\n      if (error.response && error.response.data) {\n        setSubmissionErrors(error.response.data);\n      } else setSubmissionErrors({\n        err: \"Login error\"\n      });\n    }\n  };\n\n  const checkValidation = values => {\n    var _values$email, _values$password;\n\n    const errors = {};\n\n    if (!((_values$email = values.email) === null || _values$email === void 0 ? void 0 : _values$email.trim())) {\n      errors.email = \"Please enter the email\";\n    }\n\n    if (!((_values$password = values.password) === null || _values$password === void 0 ? void 0 : _values$password.trim())) {\n      errors.password = \"Please enter the password\";\n    }\n\n    return errors;\n  };\n\n  useEffect(() => {\n    if (userState.error) {\n      setSubmissionErrors([userState.error]);\n    }\n\n    if (userState.isLoggedIn) {\n      message.success(\"User logged in successfully\");\n      router.push(\"/\");\n    }\n  }, [userState]);\n  return /*#__PURE__*/_jsxDEV(FinalForm, {\n    initialValues: initialValues,\n    validate: checkValidation,\n    onSubmit: onSubmit,\n    render: ({\n      handleSubmit,\n      submitting\n    }) => /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Email\",\n        labelCol: {\n          span: 24\n        },\n        wrapperCol: {\n          span: 24\n        },\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          children: ({\n            input,\n            meta\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Input, { ...input,\n              name: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this), meta.touched && meta.error && /*#__PURE__*/_jsxDEV(Tag, {\n              color: \"error\",\n              children: meta.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Password\",\n        labelCol: {\n          span: 24\n        },\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          name: \"password\",\n          children: ({\n            input,\n            meta\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Input.Password, { ...input,\n              name: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this), meta.touched && meta.error && /*#__PURE__*/_jsxDEV(Tag, {\n              color: \"error\",\n              children: meta.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), !isEmpty(submissionErrors) && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: typeof submissionErrors === \"object\" ? Object.entries(submissionErrors).map(([key, value]) => /*#__PURE__*/_jsxDEV(Tag, {\n          color: \"error\",\n          className: \"full-width\",\n          children: value\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 19\n        }, this)) : /*#__PURE__*/_jsxDEV(Tag, {\n          color: \"error\",\n          className: \"full-width\",\n          children: submissionErrors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-wrapper-vertical\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          disabled: submitting,\n          htmlType: \"submit\",\n          type: \"primary\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          htmlType: \"button\",\n          type: \"link\",\n          onClick: () => router.push(\"signup\"),\n          children: \"Don't have an account? Signup!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"gGUl8jBEADKKIOZD6SMk74emnhU=\", false, function () {\n  return [useHistory, useDispatch, useSelector];\n});\n\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/charis/Desktop/mern-blog/client/src/pages/Login/LoginForm.js"],"names":["React","useState","useEffect","useHistory","Form","Input","Button","Tag","message","FinalForm","Field","isEmpty","useDispatch","useSelector","userAuthActions","LoginForm","router","initialValues","setInitialValues","submissionErrors","setSubmissionErrors","dispatch","userState","st","user","onSubmit","event","login","error","console","log","response","data","err","checkValidation","values","errors","email","trim","password","isLoggedIn","success","push","handleSubmit","submitting","span","input","meta","touched","Object","entries","map","key","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Input, Button, Tag, message } from \"antd\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport isEmpty from \"lodash.isempty\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userAuthActions } from \"./../../redux/actions/actionCreator\";\n\nexport default function LoginForm() {\n  const router = useHistory();\n  const [initialValues, setInitialValues] = useState({});\n  const [submissionErrors, setSubmissionErrors] = useState({});\n  const dispatch = useDispatch();\n  const userState = useSelector((st) => st.user);\n\n  const onSubmit = async (event) => {\n    try {\n      dispatch(userAuthActions.login({ user: event }));\n    } catch (error) {\n      console.log(\"Error logging in user...\", error.response ?? error);\n      if (error.response && error.response.data) {\n        setSubmissionErrors(error.response.data);\n      } else setSubmissionErrors({ err: \"Login error\" });\n    }\n  };\n\n  const checkValidation = (values) => {\n    const errors = {};\n    if (!values.email?.trim()) {\n      errors.email = \"Please enter the email\";\n    }\n    if (!values.password?.trim()) {\n      errors.password = \"Please enter the password\";\n    }\n    return errors;\n  };\n\n  useEffect(() => {\n    if (userState.error) {\n      setSubmissionErrors([userState.error]);\n    }\n    if (userState.isLoggedIn) {\n      message.success(\"User logged in successfully\");\n      router.push(\"/\");\n    }\n  }, [userState]);\n\n  return (\n    <FinalForm\n      initialValues={initialValues}\n      validate={checkValidation}\n      onSubmit={onSubmit}\n      render={({ handleSubmit, submitting }) => (\n        <form className=\"form\" onSubmit={handleSubmit}>\n          <Form.Item\n            label=\"Email\"\n            labelCol={{ span: 24 }}\n            wrapperCol={{ span: 24 }}\n          >\n            <Field name=\"email\">\n              {({ input, meta }) => (\n                <div>\n                  <Input {...input} name=\"email\" />\n                  {meta.touched && meta.error && (\n                    <Tag color=\"error\">{meta.error}</Tag>\n                  )}\n                </div>\n              )}\n            </Field>\n          </Form.Item>\n          <Form.Item label=\"Password\" labelCol={{ span: 24 }}>\n            <Field name=\"password\">\n              {({ input, meta }) => (\n                <div>\n                  <Input.Password {...input} name=\"password\" />\n                  {meta.touched && meta.error && (\n                    <Tag color=\"error\">{meta.error}</Tag>\n                  )}\n                </div>\n              )}\n            </Field>\n          </Form.Item>\n\n          {!isEmpty(submissionErrors) && (\n            <div>\n              {typeof submissionErrors === \"object\" ? (\n                Object.entries(submissionErrors).map(([key, value]) => (\n                  <Tag color=\"error\" className=\"full-width\" key={key}>\n                    {value}\n                  </Tag>\n                ))\n              ) : (\n                <Tag color=\"error\" className=\"full-width\">\n                  {submissionErrors}\n                </Tag>\n              )}\n            </div>\n          )}\n\n          <div className=\"buttons-wrapper-vertical\">\n            <Button disabled={submitting} htmlType=\"submit\" type=\"primary\">\n              Login\n            </Button>\n            <Button\n              htmlType=\"button\"\n              type=\"link\"\n              onClick={() => router.push(\"signup\")}\n            >\n              Don't have an account? Signup!\n            </Button>\n          </div>\n        </form>\n      )}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}