{"ast":null,"code":"var _jsxFileName = \"/home/grace/Desktop/waaw-blogg/client/src/pages/Comments/CommentsMobile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport defaultUser from \"./../../assets/images/default-user.png\";\nimport Avatar from \"antd/lib/avatar/avatar\";\nimport \"./Comments.scss\";\nimport moment from \"moment\";\nimport { EditTwoTone, DeleteTwoTone } from \"@ant-design/icons\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport { Form, Input, Button, Alert } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CommentsMobile({\n  comment,\n  index,\n  userState,\n  setDeleteModal,\n  selectedEditCommentID,\n  setDeleteSelectedCommentID,\n  setEditSelectedCommentID,\n  onSubmit\n}) {\n  _s();\n\n  var _comment$createdBy$im;\n\n  const [initialValues, setInitialValues] = useState({});\n  const [submissionErrors, setSubmissionErrors] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-container full-width-comment\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Avatar, {\n        size: \"large\",\n        src: (_comment$createdBy$im = comment.createdBy.imagePath) !== null && _comment$createdBy$im !== void 0 ? _comment$createdBy$im : defaultUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"full-width-comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-text-mobile\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: comment.createdBy.userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-date-mobile\",\n          children: moment(comment.createdAt).fromNow(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: comment._id === selectedEditCommentID ? /*#__PURE__*/_jsxDEV(FinalForm, {\n            initialValues: initialValues,\n            onSubmit: onSubmit,\n            render: ({\n              form,\n              handleSubmit,\n              submitting,\n              reset\n            }) => /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"comment-editing\",\n              onSubmit: async event => {\n                await handleSubmit(event);\n                form.reset();\n              },\n              children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n                labelCol: {\n                  span: 24\n                },\n                children: /*#__PURE__*/_jsxDEV(Field, {\n                  name: \"content\",\n                  children: ({\n                    input,\n                    meta\n                  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(Input, { ...input,\n                      name: \"content\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 50,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 49,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 21\n              }, this), submissionErrors && /*#__PURE__*/_jsxDEV(Alert, {\n                message: submissionErrors,\n                type: \"error\",\n                showIcon: true,\n                closable: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comments-btns-container\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  disabled: submitting,\n                  htmlType: \"submit\",\n                  type: \"primary\",\n                  children: \"Update Comment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  disabled: submitting,\n                  htmlType: \"button\",\n                  onClick: () => setEditSelectedCommentID(null),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this) : comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), comment._id !== selectedEditCommentID && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: comment.createdBy._id === userState.user.id && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icons-cols-mobile\",\n          children: [/*#__PURE__*/_jsxDEV(EditTwoTone, {\n            onClick: () => {\n              setEditSelectedCommentID(comment._id);\n              setInitialValues({ ...comment\n              });\n            }\n          }, \"edit\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(DeleteTwoTone, {\n            twoToneColor: \"red\",\n            onClick: () => {\n              setDeleteSelectedCommentID(comment._id);\n              setDeleteModal(true);\n            }\n          }, \"delete\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CommentsMobile, \"B61LZ8yglKUyLXC7m7beCBN8wls=\");\n\n_c = CommentsMobile;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentsMobile\");","map":{"version":3,"sources":["/home/grace/Desktop/waaw-blogg/client/src/pages/Comments/CommentsMobile.js"],"names":["React","useState","defaultUser","Avatar","moment","EditTwoTone","DeleteTwoTone","Form","FinalForm","Field","Input","Button","Alert","CommentsMobile","comment","index","userState","setDeleteModal","selectedEditCommentID","setDeleteSelectedCommentID","setEditSelectedCommentID","onSubmit","initialValues","setInitialValues","submissionErrors","setSubmissionErrors","createdBy","imagePath","userName","createdAt","fromNow","_id","form","handleSubmit","submitting","reset","event","span","input","meta","content","user","id"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport defaultUser from \"./../../assets/images/default-user.png\";\nimport Avatar from \"antd/lib/avatar/avatar\";\nimport \"./Comments.scss\";\nimport moment from \"moment\";\nimport { EditTwoTone, DeleteTwoTone } from \"@ant-design/icons\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport { Form, Input, Button, Alert } from \"antd\";\n\nexport default function CommentsMobile({\n  comment,\n  index,\n  userState,\n  setDeleteModal,\n  selectedEditCommentID,\n  setDeleteSelectedCommentID,\n  setEditSelectedCommentID,\n  onSubmit,\n}) {\n  const [initialValues, setInitialValues] = useState({});\n  const [submissionErrors, setSubmissionErrors] = useState(null);\n  return (\n    <div className=\"comment-container full-width-comment\" key={index}>\n      <div>\n        <Avatar size=\"large\" src={comment.createdBy.imagePath ?? defaultUser} />\n      </div>\n      <div className=\"full-width-comment\">\n        <div className=\"comment-text-mobile\">\n          <b>{comment.createdBy.userName}</b>\n          <div className=\"comment-date-mobile\">\n            {moment(comment.createdAt).fromNow(false)}\n          </div>\n          <div>\n            {comment._id === selectedEditCommentID ? (\n              <FinalForm\n                initialValues={initialValues}\n                onSubmit={onSubmit}\n                render={({ form, handleSubmit, submitting, reset }) => (\n                  <form\n                    className=\"comment-editing\"\n                    onSubmit={async (event) => {\n                      await handleSubmit(event);\n                      form.reset();\n                    }}\n                  >\n                    <Form.Item labelCol={{ span: 24 }}>\n                      <Field name=\"content\">\n                        {({ input, meta }) => (\n                          <div>\n                            <Input {...input} name=\"content\" />\n                          </div>\n                        )}\n                      </Field>\n                    </Form.Item>\n\n                    {submissionErrors && (\n                      <Alert\n                        message={submissionErrors}\n                        type=\"error\"\n                        showIcon\n                        closable\n                      />\n                    )}\n\n                    <div className=\"comments-btns-container\">\n                      <Button\n                        disabled={submitting}\n                        htmlType=\"submit\"\n                        type=\"primary\"\n                      >\n                        Update Comment\n                      </Button>\n                      <Button\n                        disabled={submitting}\n                        htmlType=\"button\"\n                        onClick={() => setEditSelectedCommentID(null)}\n                      >\n                        Cancel\n                      </Button>\n                    </div>\n                  </form>\n                )}\n              />\n            ) : (\n              comment.content\n            )}\n          </div>\n        </div>\n\n        {comment._id !== selectedEditCommentID && (\n          <>\n            {comment.createdBy._id === userState.user.id && (\n              <div className=\"icons-cols-mobile\">\n                <EditTwoTone\n                  key=\"edit\"\n                  onClick={() => {\n                    setEditSelectedCommentID(comment._id);\n                    setInitialValues({ ...comment });\n                  }}\n                />\n                <DeleteTwoTone\n                  key=\"delete\"\n                  twoToneColor=\"red\"\n                  onClick={() => {\n                    setDeleteSelectedCommentID(comment._id);\n                    setDeleteModal(true);\n                  }}\n                />\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}