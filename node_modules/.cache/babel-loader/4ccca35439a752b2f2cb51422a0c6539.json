{"ast":null,"code":"var _jsxFileName = \"/home/charis/Desktop/waaw-blog/client/src/pages/Users/UserProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Input, Button, Tag, message, Image, Spin, Alert } from \"antd\";\nimport { EditFilled, LockFilled, SaveFilled, CaretLeftOutlined } from \"@ant-design/icons\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport isEmpty from \"lodash.isempty\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { usersAPI } from \"./../../api/api\";\nimport defaultUser from \"./../../assets/images/default-user.png\";\nimport \"./UserProfile.scss\";\nimport { userAuthActions } from \"./../../redux/actions/actionCreator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UserProfile() {\n  _s();\n\n  var _initialValues$imageP;\n\n  const router = useHistory();\n  const [initialValues, setInitialValues] = useState({});\n  const [submissionErrors, setSubmissionErrors] = useState({});\n  const userState = useSelector(st => st.user);\n  const [editing, setEditing] = useState(false);\n  const [editingPassword, setEditingPassword] = useState(false);\n  const dispatch = useDispatch();\n  const [errorMsg, setErrorMsg] = useState(null);\n  useEffect(() => {\n    (async () => {\n      if (userState && userState.user && userState.user.id) {\n        try {\n          const {\n            data: res\n          } = await usersAPI.getOne(userState.user.id);\n          setInitialValues(res);\n          setErrorMsg(null);\n        } catch (error) {\n          setInitialValues({});\n          setErrorMsg(\"Error loading user profile\");\n          console.log(\"Error retrieving user data...\", error);\n        }\n      } else {\n        message.error(\"An error occured while retrieving user ID\");\n        router.push(\"/\");\n      }\n    })();\n  }, []);\n\n  const checkValidation = values => {\n    var _values$userName, _values$oldPassword, _values$password, _values$confirmPasswo, _values$email;\n\n    const errors = {};\n\n    if (editing && !((_values$userName = values.userName) === null || _values$userName === void 0 ? void 0 : _values$userName.trim())) {\n      errors.userName = \"Please enter the userName\";\n    }\n\n    if (editingPassword && !((_values$oldPassword = values.oldPassword) === null || _values$oldPassword === void 0 ? void 0 : _values$oldPassword.trim())) {\n      errors.password = \"Please enter the old password\";\n    }\n\n    if (editingPassword && !((_values$password = values.password) === null || _values$password === void 0 ? void 0 : _values$password.trim())) {\n      errors.password = \"Please enter the password\";\n    }\n\n    if (editingPassword && !((_values$confirmPasswo = values.confirmPassword) === null || _values$confirmPasswo === void 0 ? void 0 : _values$confirmPasswo.trim())) {\n      errors.confirmPassword = \"Please enter the password confirmation\";\n    } else if (editingPassword && values.confirmPassword !== values.password) {\n      errors.confirmPassword = \"Passwords do not match\";\n    }\n\n    if (editing && !((_values$email = values.email) === null || _values$email === void 0 ? void 0 : _values$email.trim())) {\n      errors.email = \"Please enter the email\";\n    }\n\n    return errors;\n  };\n\n  const onSubmit = async event => {\n    setSubmissionErrors([]);\n\n    try {\n      await usersAPI.update({\n        user: event\n      });\n      dispatch(userAuthActions.updateUser(event));\n      message.success(\"User profile updated successfully\");\n      setEditing(false);\n      setEditingPassword(false);\n      setInitialValues(event);\n    } catch (error) {\n      var _error$response;\n\n      console.log(\"Error updating user profile..\", (_error$response = error.response) !== null && _error$response !== void 0 ? _error$response : error);\n\n      if (error.response && error.response.data) {\n        setSubmissionErrors(error.response.data);\n      } else setSubmissionErrors({\n        err: \"Profile update error\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-profile\",\n      children: errorMsg ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader-container\",\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          message: errorMsg,\n          type: \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this) : Object.keys(initialValues).length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader-container\",\n        children: /*#__PURE__*/_jsxDEV(Spin, {\n          size: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"centered-text \",\n          children: [initialValues.userName, \"'s Profile\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-image centered-text \",\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            className: \"image\",\n            src: (_initialValues$imageP = initialValues.imagePath) !== null && _initialValues$imageP !== void 0 ? _initialValues$imageP : defaultUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info\",\n          children: /*#__PURE__*/_jsxDEV(FinalForm, {\n            initialValues: initialValues,\n            validate: checkValidation,\n            onSubmit: onSubmit,\n            render: ({\n              handleSubmit,\n              submitting,\n              form\n            }) => /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"form\",\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n                label: \"UserName\",\n                labelCol: {\n                  span: 24\n                },\n                wrapperCol: {\n                  span: 24\n                },\n                children: /*#__PURE__*/_jsxDEV(Field, {\n                  name: \"userName\",\n                  children: ({\n                    input,\n                    meta\n                  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Input, { ...input,\n                      name: \"userName\",\n                      readOnly: !editing,\n                      className: !editing && \"disabled\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 29\n                    }, this), meta.touched && meta.error && /*#__PURE__*/_jsxDEV(Tag, {\n                      color: \"error\",\n                      children: meta.error\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                label: \"Email\",\n                labelCol: {\n                  span: 24\n                },\n                children: /*#__PURE__*/_jsxDEV(Field, {\n                  name: \"email\",\n                  children: ({\n                    input,\n                    meta\n                  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Input, { ...input,\n                      name: \"email\",\n                      readOnly: !editing,\n                      className: !editing && \"disabled\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 141,\n                      columnNumber: 29\n                    }, this), meta.touched && meta.error && /*#__PURE__*/_jsxDEV(Tag, {\n                      color: \"error\",\n                      children: meta.error\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                label: \"Summary\",\n                labelCol: {\n                  span: 24\n                },\n                children: /*#__PURE__*/_jsxDEV(Field, {\n                  name: \"summary\",\n                  children: ({\n                    input,\n                    meta\n                  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Input, { ...input,\n                      value: !initialValues.summary && !editing ? \"No content\" : initialValues.summary,\n                      name: \"summary\",\n                      readOnly: !editing,\n                      className: !editing && \"disabled\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 158,\n                      columnNumber: 29\n                    }, this), meta.touched && meta.error && /*#__PURE__*/_jsxDEV(Tag, {\n                      color: \"error\",\n                      children: meta.error\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 170,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 21\n              }, this), editing && /*#__PURE__*/_jsxDEV(Form.Item, {\n                label: \"Image URL\",\n                labelCol: {\n                  span: 24\n                },\n                children: /*#__PURE__*/_jsxDEV(Field, {\n                  name: \"imagePath\",\n                  children: ({\n                    input,\n                    meta\n                  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Input, { ...input,\n                      name: \"imagePath\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 31\n                    }, this), meta.touched && meta.error && /*#__PURE__*/_jsxDEV(Tag, {\n                      color: \"error\",\n                      children: meta.error\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 183,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 23\n              }, this), editingPassword && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n                  label: \"Old Password\",\n                  labelCol: {\n                    span: 24\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Field, {\n                    name: \"oldPassword\",\n                    children: ({\n                      input,\n                      meta\n                    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(Input.Password, { ...input,\n                        name: \"oldPassword\",\n                        className: \"no-radius\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 197,\n                        columnNumber: 33\n                      }, this), meta.touched && meta.error && /*#__PURE__*/_jsxDEV(Tag, {\n                        color: \"error\",\n                        children: meta.error\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 203,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 196,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                  label: \"Password\",\n                  labelCol: {\n                    span: 24\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Field, {\n                    name: \"password\",\n                    children: ({\n                      input,\n                      meta\n                    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(Input.Password, { ...input,\n                        name: \"password\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 213,\n                        columnNumber: 33\n                      }, this), meta.touched && meta.error && /*#__PURE__*/_jsxDEV(Tag, {\n                        color: \"error\",\n                        children: meta.error\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 215,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 212,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                  label: \"Confirm Password\",\n                  labelCol: {\n                    span: 24\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Field, {\n                    name: \"confirmPassword\",\n                    children: ({\n                      input,\n                      meta\n                    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(Input.Password, { ...input,\n                        name: \"confirmPassword\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 228,\n                        columnNumber: 33\n                      }, this), meta.touched && meta.error && /*#__PURE__*/_jsxDEV(Tag, {\n                        color: \"error\",\n                        children: meta.error\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 233,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true), !isEmpty(submissionErrors) && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: Object.entries(submissionErrors).map(([key, value]) => /*#__PURE__*/_jsxDEV(Tag, {\n                  color: \"error\",\n                  className: \"full-width\",\n                  children: value\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 29\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"buttons-wrapper-horizontal m-auto\",\n                children: [!(editing || editingPassword) && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    htmlType: \"button\",\n                    type: \"primary\",\n                    icon: /*#__PURE__*/_jsxDEV(EditFilled, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 260,\n                      columnNumber: 35\n                    }, this),\n                    onClick: () => {\n                      setEditing(true);\n                      setEditingPassword(false);\n                    },\n                    children: \"Edit Profile\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    htmlType: \"button\",\n                    type: \"primary\",\n                    icon: /*#__PURE__*/_jsxDEV(LockFilled, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 271,\n                      columnNumber: 35\n                    }, this),\n                    onClick: () => {\n                      setEditing(false);\n                      setEditingPassword(true);\n                    },\n                    children: \"Edit Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true), (editing || editingPassword) && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    disabled: submitting,\n                    htmlType: \"submit\",\n                    type: \"primary\",\n                    icon: /*#__PURE__*/_jsxDEV(SaveFilled, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 288,\n                      columnNumber: 35\n                    }, this),\n                    children: \"Submit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    htmlType: \"button\",\n                    type: \"primary\",\n                    icon: /*#__PURE__*/_jsxDEV(CaretLeftOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 295,\n                      columnNumber: 35\n                    }, this),\n                    onClick: () => {\n                      setEditing(false);\n                      setEditingPassword(false);\n                      form.reset();\n                    },\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserProfile, \"OT92DGGwLBDWZSVP3qOzupLWIpc=\", false, function () {\n  return [useHistory, useSelector, useDispatch];\n});\n\n_c = UserProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"sources":["/home/charis/Desktop/waaw-blog/client/src/pages/Users/UserProfile.js"],"names":["React","useState","useEffect","useHistory","Form","Input","Button","Tag","message","Image","Spin","Alert","EditFilled","LockFilled","SaveFilled","CaretLeftOutlined","FinalForm","Field","isEmpty","useDispatch","useSelector","usersAPI","defaultUser","userAuthActions","UserProfile","router","initialValues","setInitialValues","submissionErrors","setSubmissionErrors","userState","st","user","editing","setEditing","editingPassword","setEditingPassword","dispatch","errorMsg","setErrorMsg","id","data","res","getOne","error","console","log","push","checkValidation","values","errors","userName","trim","oldPassword","password","confirmPassword","email","onSubmit","event","update","updateUser","success","response","err","Object","keys","length","imagePath","handleSubmit","submitting","form","span","input","meta","touched","summary","entries","map","key","value","reset"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Input, Button, Tag, message, Image, Spin, Alert } from \"antd\";\nimport {\n  EditFilled,\n  LockFilled,\n  SaveFilled,\n  CaretLeftOutlined,\n} from \"@ant-design/icons\";\nimport { Form as FinalForm, Field } from \"react-final-form\";\nimport isEmpty from \"lodash.isempty\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { usersAPI } from \"./../../api/api\";\nimport defaultUser from \"./../../assets/images/default-user.png\";\nimport \"./UserProfile.scss\";\nimport { userAuthActions } from \"./../../redux/actions/actionCreator\";\n\nexport default function UserProfile() {\n  const router = useHistory();\n  const [initialValues, setInitialValues] = useState({});\n  const [submissionErrors, setSubmissionErrors] = useState({});\n  const userState = useSelector((st) => st.user);\n  const [editing, setEditing] = useState(false);\n  const [editingPassword, setEditingPassword] = useState(false);\n  const dispatch = useDispatch();\n  const [errorMsg, setErrorMsg] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      if (userState && userState.user && userState.user.id) {\n        try {\n          const { data: res } = await usersAPI.getOne(userState.user.id);\n          setInitialValues(res);\n          setErrorMsg(null);\n        } catch (error) {\n          setInitialValues({});\n          setErrorMsg(\"Error loading user profile\");\n          console.log(\"Error retrieving user data...\", error);\n        }\n      } else {\n        message.error(\"An error occured while retrieving user ID\");\n        router.push(\"/\");\n      }\n    })();\n  }, []);\n\n  const checkValidation = (values) => {\n    const errors = {};\n    if (editing && !values.userName?.trim()) {\n      errors.userName = \"Please enter the userName\";\n    }\n    if (editingPassword && !values.oldPassword?.trim()) {\n      errors.password = \"Please enter the old password\";\n    }\n    if (editingPassword && !values.password?.trim()) {\n      errors.password = \"Please enter the password\";\n    }\n    if (editingPassword && !values.confirmPassword?.trim()) {\n      errors.confirmPassword = \"Please enter the password confirmation\";\n    } else if (editingPassword && values.confirmPassword !== values.password) {\n      errors.confirmPassword = \"Passwords do not match\";\n    }\n    if (editing && !values.email?.trim()) {\n      errors.email = \"Please enter the email\";\n    }\n    return errors;\n  };\n\n  const onSubmit = async (event) => {\n    setSubmissionErrors([]);\n    try {\n      await usersAPI.update({ user: event });\n      dispatch(userAuthActions.updateUser(event));\n      message.success(\"User profile updated successfully\");\n      setEditing(false);\n      setEditingPassword(false);\n      setInitialValues(event);\n    } catch (error) {\n      console.log(\"Error updating user profile..\", error.response ?? error);\n      if (error.response && error.response.data) {\n        setSubmissionErrors(error.response.data);\n      } else setSubmissionErrors({ err: \"Profile update error\" });\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"user-profile\">\n        {errorMsg ? (\n          <div className=\"loader-container\">\n            <Alert message={errorMsg} type=\"error\" />\n          </div>\n        ) : Object.keys(initialValues).length === 0 ? (\n          <div className=\"loader-container\">\n            <Spin size=\"large\" />\n          </div>\n        ) : (\n          <>\n            <h2 className=\"centered-text \">\n              {initialValues.userName}'s Profile\n            </h2>\n            <div className=\"user-image centered-text \">\n              <Image\n                className=\"image\"\n                src={initialValues.imagePath ?? defaultUser}\n              />\n            </div>\n            <div className=\"user-info\">\n              <FinalForm\n                initialValues={initialValues}\n                validate={checkValidation}\n                onSubmit={onSubmit}\n                render={({ handleSubmit, submitting, form }) => (\n                  <form className=\"form\" onSubmit={handleSubmit}>\n                    <Form.Item\n                      label=\"UserName\"\n                      labelCol={{ span: 24 }}\n                      wrapperCol={{ span: 24 }}\n                    >\n                      <Field name=\"userName\">\n                        {({ input, meta }) => (\n                          <div>\n                            <Input\n                              {...input}\n                              name=\"userName\"\n                              readOnly={!editing}\n                              className={!editing && \"disabled\"}\n                            />\n                            {meta.touched && meta.error && (\n                              <Tag color=\"error\">{meta.error}</Tag>\n                            )}\n                          </div>\n                        )}\n                      </Field>\n                    </Form.Item>\n\n                    <Form.Item label=\"Email\" labelCol={{ span: 24 }}>\n                      <Field name=\"email\">\n                        {({ input, meta }) => (\n                          <div>\n                            <Input\n                              {...input}\n                              name=\"email\"\n                              readOnly={!editing}\n                              className={!editing && \"disabled\"}\n                            />\n                            {meta.touched && meta.error && (\n                              <Tag color=\"error\">{meta.error}</Tag>\n                            )}\n                          </div>\n                        )}\n                      </Field>\n                    </Form.Item>\n                    <Form.Item label=\"Summary\" labelCol={{ span: 24 }}>\n                      <Field name=\"summary\">\n                        {({ input, meta }) => (\n                          <div>\n                            <Input\n                              {...input}\n                              value={\n                                !initialValues.summary && !editing\n                                  ? \"No content\"\n                                  : initialValues.summary\n                              }\n                              name=\"summary\"\n                              readOnly={!editing}\n                              className={!editing && \"disabled\"}\n                            />\n                            {meta.touched && meta.error && (\n                              <Tag color=\"error\">{meta.error}</Tag>\n                            )}\n                          </div>\n                        )}\n                      </Field>\n                    </Form.Item>\n                    {editing && (\n                      <Form.Item label=\"Image URL\" labelCol={{ span: 24 }}>\n                        <Field name=\"imagePath\">\n                          {({ input, meta }) => (\n                            <div>\n                              <Input {...input} name=\"imagePath\" />\n                              {meta.touched && meta.error && (\n                                <Tag color=\"error\">{meta.error}</Tag>\n                              )}\n                            </div>\n                          )}\n                        </Field>\n                      </Form.Item>\n                    )}\n\n                    {editingPassword && (\n                      <>\n                        <Form.Item label=\"Old Password\" labelCol={{ span: 24 }}>\n                          <Field name=\"oldPassword\">\n                            {({ input, meta }) => (\n                              <div>\n                                <Input.Password\n                                  {...input}\n                                  name=\"oldPassword\"\n                                  className=\"no-radius\"\n                                />\n                                {meta.touched && meta.error && (\n                                  <Tag color=\"error\">{meta.error}</Tag>\n                                )}\n                              </div>\n                            )}\n                          </Field>\n                        </Form.Item>\n                        <Form.Item label=\"Password\" labelCol={{ span: 24 }}>\n                          <Field name=\"password\">\n                            {({ input, meta }) => (\n                              <div>\n                                <Input.Password {...input} name=\"password\" />\n                                {meta.touched && meta.error && (\n                                  <Tag color=\"error\">{meta.error}</Tag>\n                                )}\n                              </div>\n                            )}\n                          </Field>\n                        </Form.Item>\n                        <Form.Item\n                          label=\"Confirm Password\"\n                          labelCol={{ span: 24 }}\n                        >\n                          <Field name=\"confirmPassword\">\n                            {({ input, meta }) => (\n                              <div>\n                                <Input.Password\n                                  {...input}\n                                  name=\"confirmPassword\"\n                                />\n                                {meta.touched && meta.error && (\n                                  <Tag color=\"error\">{meta.error}</Tag>\n                                )}\n                              </div>\n                            )}\n                          </Field>\n                        </Form.Item>\n                      </>\n                    )}\n\n                    {!isEmpty(submissionErrors) && (\n                      <div>\n                        {Object.entries(submissionErrors).map(\n                          ([key, value]) => (\n                            <Tag color=\"error\" className=\"full-width\" key={key}>\n                              {value}\n                            </Tag>\n                          )\n                        )}\n                      </div>\n                    )}\n\n                    <div className=\"buttons-wrapper-horizontal m-auto\">\n                      {!(editing || editingPassword) && (\n                        <>\n                          <Button\n                            htmlType=\"button\"\n                            type=\"primary\"\n                            icon={<EditFilled />}\n                            onClick={() => {\n                              setEditing(true);\n                              setEditingPassword(false);\n                            }}\n                          >\n                            Edit Profile\n                          </Button>\n                          <Button\n                            htmlType=\"button\"\n                            type=\"primary\"\n                            icon={<LockFilled />}\n                            onClick={() => {\n                              setEditing(false);\n                              setEditingPassword(true);\n                            }}\n                          >\n                            Edit Password\n                          </Button>\n                        </>\n                      )}\n\n                      {(editing || editingPassword) && (\n                        <>\n                          <Button\n                            disabled={submitting}\n                            htmlType=\"submit\"\n                            type=\"primary\"\n                            icon={<SaveFilled />}\n                          >\n                            Submit\n                          </Button>\n                          <Button\n                            htmlType=\"button\"\n                            type=\"primary\"\n                            icon={<CaretLeftOutlined />}\n                            onClick={() => {\n                              setEditing(false);\n                              setEditingPassword(false);\n                              form.reset();\n                            }}\n                          >\n                            Cancel\n                          </Button>\n                        </>\n                      )}\n                    </div>\n                  </form>\n                )}\n              />\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}