{"ast":null,"code":"import { put, takeEvery } from \"redux-saga/effects\";\nimport { userAuth as actions } from \"../actions\";\nimport { userAuthActions } from \"./../actions/actionCreator\";\nimport { authAPI } from \"./../../api/api\";\nimport { saveState } from \"./../store/sessionStorage\";\n\nfunction* createLogin(action) {\n  try {\n    const response = yield authAPI.login(action.payload);\n\n    if (response.data.token) {\n      const token = response.data.token;\n      saveState({\n        isLoggedIn: true,\n        error: \"\",\n        token: token\n      });\n      yield put(userAuthActions.loginSuccess({\n        token\n      }));\n    }\n  } catch (err) {\n    yield put(userAuthActions.loginFailed(\"Login data is incorrect\"));\n  }\n}\n\nexport function* createLoginStart() {\n  yield takeEvery(actions.LOGIN, createLogin);\n}","map":{"version":3,"sources":["/home/grace/Desktop/waaw-blogg/client/src/redux/sagas/userAuthSaga.js"],"names":["put","takeEvery","userAuth","actions","userAuthActions","authAPI","saveState","createLogin","action","response","login","payload","data","token","isLoggedIn","error","loginSuccess","err","loginFailed","createLoginStart","LOGIN"],"mappings":"AAAA,SAASA,GAAT,EAAcC,SAAd,QAA+B,oBAA/B;AACA,SAASC,QAAQ,IAAIC,OAArB,QAAoC,YAApC;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,SAAT,QAA0B,2BAA1B;;AAEA,UAAUC,WAAV,CAAsBC,MAAtB,EAA8B;AAC5B,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,KAAR,CAAcF,MAAM,CAACG,OAArB,CAAvB;;AACA,QAAIF,QAAQ,CAACG,IAAT,CAAcC,KAAlB,EAAyB;AACvB,YAAMA,KAAK,GAAGJ,QAAQ,CAACG,IAAT,CAAcC,KAA5B;AACAP,MAAAA,SAAS,CAAC;AACRQ,QAAAA,UAAU,EAAE,IADJ;AAERC,QAAAA,KAAK,EAAE,EAFC;AAGRF,QAAAA,KAAK,EAAEA;AAHC,OAAD,CAAT;AAKA,YAAMb,GAAG,CACPI,eAAe,CAACY,YAAhB,CAA6B;AAC3BH,QAAAA;AAD2B,OAA7B,CADO,CAAT;AAKD;AACF,GAfD,CAeE,OAAOI,GAAP,EAAY;AACZ,UAAMjB,GAAG,CAACI,eAAe,CAACc,WAAhB,CAA4B,yBAA5B,CAAD,CAAT;AACD;AACF;;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAClC,QAAMlB,SAAS,CAACE,OAAO,CAACiB,KAAT,EAAgBb,WAAhB,CAAf;AACD","sourcesContent":["import { put, takeEvery } from \"redux-saga/effects\";\nimport { userAuth as actions } from \"../actions\";\nimport { userAuthActions } from \"./../actions/actionCreator\";\nimport { authAPI } from \"./../../api/api\";\nimport { saveState } from \"./../store/sessionStorage\";\n\nfunction* createLogin(action) {\n  try {\n    const response = yield authAPI.login(action.payload);\n    if (response.data.token) {\n      const token = response.data.token;\n      saveState({\n        isLoggedIn: true,\n        error: \"\",\n        token: token,\n      });\n      yield put(\n        userAuthActions.loginSuccess({\n          token,\n        })\n      );\n    }\n  } catch (err) {\n    yield put(userAuthActions.loginFailed(\"Login data is incorrect\"));\n  }\n}\n\nexport function* createLoginStart() {\n  yield takeEvery(actions.LOGIN, createLogin);\n}\n"]},"metadata":{},"sourceType":"module"}