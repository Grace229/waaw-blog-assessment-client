{"ast":null,"code":"var _jsxFileName = \"/home/charis/Desktop/waaw-blog/client/src/pages/Posts/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { Button, message, Image, Spin, Alert, Modal, Divider } from \"antd\";\nimport { EditFilled, DeleteFilled } from \"@ant-design/icons\";\nimport { useSelector } from \"react-redux\";\nimport { postsAPI } from \"./../../api/api\";\nimport \"./Post.scss\";\nimport defaultPostImage from \"./../../assets/images/default-post-image.jpg\";\nimport defaultUser from \"./../../assets/images/default-user.png\";\nimport moment from \"moment\";\nimport Avatar from \"antd/lib/avatar/avatar\";\nimport CommentForm from \"../Comments/CommentForm\";\nimport Comments from \"../Comments/Comments\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Post() {\n  _s();\n\n  var _postData$userImageUr;\n\n  const [postData, setPostData] = useState({});\n  const router = useHistory();\n  const userState = useSelector(st => st.user);\n  const location = useLocation();\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [deletePostID, setDeletePostID] = useState(null);\n  const [errorMsg, setErrorMsg] = useState(null);\n  const [reloadDelete, setReloadDelete] = useState(null);\n  const [reloadEdit, setReloadEdit] = useState(null);\n  const [reloadPost, setReloadPost] = useState(null);\n  useEffect(() => {\n    let id = null;\n\n    (async () => {\n      if (location.state && location.state.hasOwnProperty(\"postID\")) {\n        id = location.state.postID;\n\n        try {\n          const {\n            data: res\n          } = await postsAPI.getOne(id);\n          setPostData(res);\n          setErrorMsg(null);\n        } catch (error) {\n          setPostData({});\n          setErrorMsg(\"Error loading post data\");\n          console.log(\"Error retrieving one post...\", error);\n        }\n      } else {\n        message.error(\"An error occured while retrieving post ID\");\n        router.push(\"/\");\n      }\n    })();\n  }, [location.state, reloadDelete, reloadPost, reloadEdit]);\n\n  const confirmDelete = async () => {\n    try {\n      await postsAPI.delete(deletePostID);\n      setDeleteModal(false);\n      message.success(\"Post deleted successfully\");\n      router.goBack();\n    } catch (error) {\n      var _error$response;\n\n      console.log(\"Error deleting post...\", (_error$response = error.response) !== null && _error$response !== void 0 ? _error$response : error);\n      message.error(\"Error deleting post\");\n\n      if (error.response && error.response.data) {\n        message.error(error.response.data);\n      } else message.error(\"Error deleting post\");\n\n      setDeleteModal(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"view-post\",\n    children: errorMsg ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader-container\",\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        message: errorMsg,\n        type: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : Object.keys(postData).length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader-container\",\n      children: /*#__PURE__*/_jsxDEV(Spin, {\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: postData.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"two-cols\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              size: \"large\",\n              src: (_postData$userImageUr = postData.userImageUrl) !== null && _postData$userImageUr !== void 0 ? _postData$userImageUr : defaultUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), \"\\xA0\", postData.createdByName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: moment(postData.createdAt).format(\"DD MMMM YYYY\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered-text\",\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: postData.imagePath ? postData.imagePath : defaultPostImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-content\",\n        children: postData.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), postData.createdBy === userState.user.id && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-wrapper-horizontal\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          htmlType: \"button\",\n          type: \"primary\",\n          icon: /*#__PURE__*/_jsxDEV(EditFilled, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 23\n          }, this),\n          onClick: () => router.push(\"/posts/edit\", {\n            postID: postData._id\n          }),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          htmlType: \"button\",\n          type: \"primary\",\n          icon: /*#__PURE__*/_jsxDEV(DeleteFilled, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 23\n          }, this),\n          danger: true,\n          onClick: () => {\n            setDeletePostID(postData._id);\n            setDeleteModal(true);\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), Boolean(userState.user.id) && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n          createdBy: userState.user.id,\n          postId: postData._id,\n          setReloadingFlag: value => setReloadPost(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Comments, {\n        data: postData.comments,\n        setDeleteReloadingFlag: value => setReloadDelete(value),\n        setEditReloadingFlag: value => setReloadEdit(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        title: \"Delete Confirmation\",\n        visible: deleteModal,\n        onOk: () => confirmDelete(),\n        onCancel: () => setDeleteModal(false),\n        centered: true,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to delete post?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Post, \"S4lXncffSBcJbz8a+GuPDKH1YoA=\", false, function () {\n  return [useHistory, useSelector, useLocation];\n});\n\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/charis/Desktop/waaw-blog/client/src/pages/Posts/Post.js"],"names":["React","useState","useEffect","useHistory","useLocation","Button","message","Image","Spin","Alert","Modal","Divider","EditFilled","DeleteFilled","useSelector","postsAPI","defaultPostImage","defaultUser","moment","Avatar","CommentForm","Comments","Post","postData","setPostData","router","userState","st","user","location","deleteModal","setDeleteModal","deletePostID","setDeletePostID","errorMsg","setErrorMsg","reloadDelete","setReloadDelete","reloadEdit","setReloadEdit","reloadPost","setReloadPost","id","state","hasOwnProperty","postID","data","res","getOne","error","console","log","push","confirmDelete","delete","success","goBack","response","Object","keys","length","title","userImageUrl","createdByName","createdAt","format","imagePath","content","createdBy","_id","Boolean","value","comments"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { Button, message, Image, Spin, Alert, Modal, Divider } from \"antd\";\nimport { EditFilled, DeleteFilled } from \"@ant-design/icons\";\nimport { useSelector } from \"react-redux\";\nimport { postsAPI } from \"./../../api/api\";\nimport \"./Post.scss\";\nimport defaultPostImage from \"./../../assets/images/default-post-image.jpg\";\nimport defaultUser from \"./../../assets/images/default-user.png\";\nimport moment from \"moment\";\nimport Avatar from \"antd/lib/avatar/avatar\";\nimport CommentForm from \"../Comments/CommentForm\";\nimport Comments from \"../Comments/Comments\";\n\nexport default function Post() {\n  const [postData, setPostData] = useState({});\n  const router = useHistory();\n  const userState = useSelector((st) => st.user);\n  const location = useLocation();\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [deletePostID, setDeletePostID] = useState(null);\n  const [errorMsg, setErrorMsg] = useState(null);\n  const [reloadDelete, setReloadDelete] = useState(null);\n  const [reloadEdit, setReloadEdit] = useState(null);\n  const [reloadPost, setReloadPost] = useState(null);\n\n  useEffect(() => {\n    let id = null;\n    (async () => {\n      if (location.state && location.state.hasOwnProperty(\"postID\")) {\n        id = location.state.postID;\n        try {\n          const { data: res } = await postsAPI.getOne(id);\n          setPostData(res);\n          setErrorMsg(null);\n        } catch (error) {\n          setPostData({});\n          setErrorMsg(\"Error loading post data\");\n          console.log(\"Error retrieving one post...\", error);\n        }\n      } else {\n        message.error(\"An error occured while retrieving post ID\");\n        router.push(\"/\");\n      }\n    })();\n  }, [location.state, reloadDelete, reloadPost, reloadEdit]);\n\n  const confirmDelete = async () => {\n    try {\n      await postsAPI.delete(deletePostID);\n      setDeleteModal(false);\n      message.success(\"Post deleted successfully\");\n      router.goBack();\n    } catch (error) {\n      console.log(\"Error deleting post...\", error.response ?? error);\n      message.error(\"Error deleting post\");\n      if (error.response && error.response.data) {\n        message.error(error.response.data);\n      } else message.error(\"Error deleting post\");\n      setDeleteModal(false);\n    }\n  };\n\n  return (\n    <div className=\"view-post\">\n      {errorMsg ? (\n        <div className=\"loader-container\">\n          <Alert message={errorMsg} type=\"error\" />\n        </div>\n      ) : Object.keys(postData).length === 0 ? (\n        <div className=\"loader-container\">\n          <Spin size=\"large\" />\n        </div>\n      ) : (\n        <>\n          <div className=\"post-header\">\n            <h1>{postData.title}</h1>\n            <div className=\"two-cols\">\n              <div>\n                <Avatar\n                  size=\"large\"\n                  src={postData.userImageUrl ?? defaultUser}\n                />\n                &nbsp;\n                {postData.createdByName}\n              </div>\n              <p>{moment(postData.createdAt).format(\"DD MMMM YYYY\")}</p>\n            </div>\n          </div>\n          <div className=\"centered-text\">\n            <Image\n              src={postData.imagePath ? postData.imagePath : defaultPostImage}\n            />\n          </div>\n          <div className=\"post-content\">{postData.content}</div>\n          {postData.createdBy === userState.user.id && (\n            <div className=\"buttons-wrapper-horizontal\">\n              <Button\n                htmlType=\"button\"\n                type=\"primary\"\n                icon={<EditFilled />}\n                onClick={() =>\n                  router.push(\"/posts/edit\", { postID: postData._id })\n                }\n              >\n                Edit\n              </Button>\n\n              <Button\n                htmlType=\"button\"\n                type=\"primary\"\n                icon={<DeleteFilled />}\n                danger\n                onClick={() => {\n                  setDeletePostID(postData._id);\n                  setDeleteModal(true);\n                }}\n              >\n                Delete\n              </Button>\n            </div>\n          )}\n          {Boolean(userState.user.id) && (\n            <>\n              <Divider />\n              <CommentForm\n                createdBy={userState.user.id}\n                postId={postData._id}\n                setReloadingFlag={(value) => setReloadPost(value)}\n              />\n            </>\n          )}\n          <Comments\n            data={postData.comments}\n            setDeleteReloadingFlag={(value) => setReloadDelete(value)}\n            setEditReloadingFlag={(value) => setReloadEdit(value)}\n          />\n\n          <Modal\n            title=\"Delete Confirmation\"\n            visible={deleteModal}\n            onOk={() => confirmDelete()}\n            onCancel={() => setDeleteModal(false)}\n            centered\n          >\n            <p>Are you sure you want to delete post?</p>\n          </Modal>\n        </>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}